/*–ó–∞–¥–∞—á–∞ 1: Todo-–ª–∏—Å—Ç —Å —Ç–∞–π–º–µ—Ä–æ–º –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
–û–ø–∏—Å–∞–Ω–∏–µ:
–°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π todo-–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞–¥–∞—á–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.

üìç–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
–ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—ã–µ 15 todos —Å /todos.
–û—Ç–æ–±—Ä–∞–∑–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
–ù–∞–¥ —Å–ø–∏—Å–∫–æ–º –ø–æ–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:

–í—Å–µ–≥–æ –∑–∞–¥–∞—á
–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á
–û—Å—Ç–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å
–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
–î–æ–±–∞–≤—å—Ç–µ —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
–¢–∞–π–º–µ—Ä –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
–î–æ–±–∞–≤—å—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 5 –∑–∞–¥–∞—á", –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ 5 todos.
–ü—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏ (completed), —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ

–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ useState –¥–ª—è: —Å–ø–∏—Å–∫–∞ todos, —Ç–∞–π–º–µ—Ä–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ useEffect –¥–ª—è: –Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø—É—Å–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–π–º–µ—Ä–∞

API endpoint: https://jsonplaceholder.typicode.com/todos?_start=0&_limit={limit}
–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—á–∏—â–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª —Ç–∞–π–º–µ—Ä–∞ –≤ cleanup —Ñ—É–Ω–∫—Ü–∏–∏ useEffect. */


import { useEffect, useState } from "react"

interface ITodo{
  userId: number,
  id: number,
  title: string,
  completed: boolean
}
    
  


export default function TodoList  ()  {
  const [seconds, setSeconds] = useState<number>(0)
  const [todos, setTodos] = useState<ITodo []>([])
  const [limit, setLimit] = useState<number>(15)

  
  const URL = `https://jsonplaceholder.typicode.com/todos?_limit=${limit}`

    useEffect (() => {
      const interval =setInterval(() => {
            setSeconds((s) => s + 1)
        }, 1000)

      fetch(URL)
      .then(res => res.json())
      .then(data => {
      console.log('–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
      setTodos(data)
      })

      return () => {
      clearInterval(interval);
      console.log(`Cleanup done `);
    }
      
    }, [limit])

    function loadingTasks() {
      setLimit(prev => prev + 5)
      console.log(limit)
    }

  return (

    <div>
        TodoList
        <h2>Timer: {seconds}</h2>

        <ul>
          {todos.map((todo) => (
            <li key={todo.id}>
              <div>UserID: {todo.userId} - ID: {todo.id}</div>
              <div>Task: {todo.title} <input type="checkbox"/>{todo.completed}</div> 
            </li>
          ))}
        </ul>

       <button onClick={loadingTasks}>–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 5 –∑–∞–¥–∞—á</button>
    </div>

  )
}
